FCFS

#include <stdio.h>
#include <stdlib.h>
void fcfs_scheduling(int n, int *burst_time) {
    int waiting_time = (int)malloc(n * sizeof(int));
    int turnaround_time = (int)malloc(n * sizeof(int));
    int total_waiting_time = 0;
    waiting_time[0] = 0;
    for (int i = 1; i < n; i++) {
        waiting_time[i] = waiting_time[i-1] + burst_time[i-1];
        total_waiting_time += waiting_time[i];
    }
    for (int i = 0; i < n; i++) {
        turnaround_time[i] = waiting_time[i] + burst_time[i];
    }
    printf("Process\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("P%d\t%d\t\t%d\t\t%d\n", 
               i+1, burst_time[i], waiting_time[i], turnaround_time[i]);
    }
    printf("Average Waiting Time: %.2f\n", 
           (float)total_waiting_time / n);
    free(waiting_time);
    free(turnaround_time);
}
int main() {
    int n;
    printf("Enter number of processes: ");
    scanf("%d", &n);
    int burst_time = (int)malloc(n * sizeof(int));
    printf("Enter burst times:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d: ", i+1);
        scanf("%d", &burst_time[i]);
    }
    fcfs_scheduling(n, burst_time);
    free(burst_time);
    return 0;
}
//input
//4
//5
//9
//2
//3
